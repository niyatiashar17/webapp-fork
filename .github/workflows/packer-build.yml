name: Packer-Build

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  packer-build-checks:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up MySQL
        run: |
          sudo systemctl start mysql
          mysql -u${{secrets.DB_USERNAME}}  -p${{secrets.DB_PASSWORD}} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_DATABASE }};" || exit 1
          mysql -u${{secrets.DB_USERNAME}}  -p${{secrets.DB_PASSWORD}} -e "USE ${{ secrets.DB_DATABASE }};" || exit 1

      - name: Install Nodejs dependencies
        run: |
          cd webapp-fork/api
          npm install

      - name: Run Nodejs tests
        env:
          DB_HOST: ${{secrets.DB_HOST}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          DB_DATABASE: ${{secrets.DB_DATABASE}}
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          PORT: ${{secrets.PORT}}
        run: |
          cd webapp-fork/api
          npm run test

      - name: Zip Node.js application
        run: |
          cd webapp-fork/api
          npm run zip
          echo $(pwd)
          echo $(ls-la)

      - name: Set up Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID}}

      - name: Get credentials file path
        run: |
          echo $GOOGLE_APPLICATION_CREDENTIALS

      - name: Install Packer
        run: |
          curl -o packer.zip https://releases.hashicorp.com/packer/1.7.2/packer_1.7.2_linux_amd64.zip
          unzip packer.zip
          sudo mv packer /usr/local/bin/

      - name: initialize  packer
        run: |
          cd webapp-fork/api/packer
          packer init packer.pkr.hcl

      - name: Build packer file
        run: |
          FILE="packer.pkr.hcl"
          cd webapp-fork/api/packer
          packer build -force -var "project_id=${{secrets.GCP_PROJECT_ID}}" -var "credentials=$GOOGLE_APPLICATION_CREDENTIALS" -var "DB_PASSWORD=${{secrets.DB_PASSWORD}}" -var "DB_USERNAME=${{secrets.DB_USERNAME}}" -var "DB_DATABASE=${{secrets.DB_DATABASE}}" -var "PORT=${{secrets.PORT}}" -var "DB_HOST=${{secrets.DB_HOST}}" $FILE || exit 1
